import type { IAttributeBackendTableRecord } from 'src/_common/components/AttributeBackendTable/BackendTableSlice';
import { ETagTypes } from 'src/_common/components/DragDropEdit/models';
import { ERequired, EStdDataModels } from 'src/_common/components/EditDrawer/EditDrawerConsts';
import { v4 as uuidv4 } from 'uuid';

export const ESCROW_PAYMENT_OPERATION_DATA: IAttributeBackendTableRecord[] = [
  {
    key: uuidv4(),
    attribute: 'activationDate',
    name: 'Дата операции',
    type: EStdDataModels.LOCAL_DATE,
    required: ERequired.O,
    description: [
      {
        id: uuidv4(),
        name: 'Дату берём из:',
        type: ETagTypes.INPUT,
      },
      {
        id: uuidv4(),
        name: 'escrowPaymentOperation',
        type: ETagTypes.MODEL,
      },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'amount',
    name: 'Сумма операции',
    type: EStdDataModels.BID_DECIMAL,
    required: ERequired.M,
    description: [
      {
        id: uuidv4(),
        name: 'Постфикс: RUB, без возможности выбрать тип валюты',
        type: ETagTypes.INPUT,
      },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'rate',
    name: 'Курс',
    type: EStdDataModels.BID_DECIMAL,
    required: ERequired.M,
    description: [
      {
        id: uuidv4(),
        name: 'Стандартный курс',
        type: ETagTypes.INPUT,
      },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'beneficiary',
    name: 'Бенефициар',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [
      {
        id: uuidv4(),
        name: 'Наименование Бенефициара',
        type: ETagTypes.INPUT,
      },
      {
        id: uuidv4(),
        name: 'CivilEscrowAgreementBeneficiary.name',
        type: ETagTypes.MODEL,
      },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'thirdParty',
    name: 'Третья сторона',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [
      {
        id: uuidv4(),
        name: 'Наименование Третьей стороны',
        type: ETagTypes.INPUT,
      },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'budgetOrganization',
    name: 'Бюджетная организация',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [
      {
        id: uuidv4(),
        name: 'Наименование Бюджетной организации',
        type: ETagTypes.INPUT,
      },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'taxAttributes',
    name: 'Налоговые атрибуты',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [
      {
        id: uuidv4(),
        name: 'Заполняется по схеме',
        type: ETagTypes.INPUT,
      },
      {
        id: uuidv4(),
        name: 'TaxAttributes',
        type: ETagTypes.MODEL,
      },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'paymentPurpose',
    name: 'Назначение платежа',
    type: EStdDataModels.STRING,
    required: ERequired.M,
    description: [
      {
        id: uuidv4(),
        name: 'Размер может составлять от 1 до 210 символов, при наличии:',
        type: ETagTypes.INPUT,
      },
      {
        id: uuidv4(),
        name: 'TaxAttributes',
        type: ETagTypes.MODEL,
      },
      {
        id: uuidv4(),
        name: 'минус 10 символов',
        type: ETagTypes.INPUT,
      },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'noProcessing',
    name: 'Не проводить',
    type: EStdDataModels.BOOLEAN,
    required: ERequired.O,
    description: [
      {
        id: uuidv4(),
        name: 'Флаг проведения платежа в системе',
        type: ETagTypes.INPUT,
      },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'lexeme',
    name: 'Не проводить',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [
      {
        id: uuidv4(),
        name: 'Данные лексемы из справочника',
        type: ETagTypes.INPUT,
      },
    ],
  },
];

export const CIVIL_ESCROW_AGREEMENT_DEPONENT_DATA: IAttributeBackendTableRecord[] = [
  {
    key: uuidv4(),
    attribute: 'escrowAccount',
    name: 'Эскроу счёт',
    type: EStdDataModels.LONG,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: 'Данные берём с корешка досье если есть', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'transitAccount',
    name: 'Транзитный счёт',
    type: EStdDataModels.LONG,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: 'Данные берём с корешка досье, поле обязательное', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'isStateDeal',
    name: 'Госзакупки 223-ФЗ/44-ФЗ',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'escrowType',
    name: 'Тип эскроу сделки',
    type: EStdDataModels.LIST,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'productObjectId',
    name: 'Идентификатор сделки',
    type: EStdDataModels.STRING,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'escrowTypeOther',
    name: 'Иной тип сделки',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'otherConditions',
    name: 'Прочие условия',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'deponent',
    name: 'Депонент',
    type: EStdDataModels.LIST,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: 'Выбор депонента', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'deponent',
    name: 'Депонент',
    type: EStdDataModels.LIST,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: 'Выбор депонента', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'Бенефициары',
    name: 'beneficiaries',
    type: EStdDataModels.LIST,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: 'Выбор бенефициара', type: ETagTypes.INPUT }],
  },
];
export const CIVIL_ESCROW_AGREEMENT_BENEFICIARY_DATA: IAttributeBackendTableRecord[] = [
  {
    key: uuidv4(),
    attribute: 'escrowAccount',
    name: 'Эскроу счёт',
    type: EStdDataModels.LONG,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: 'Данные берём с корешка досье если есть', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'transitAccount',
    name: 'Транзитный счёт',
    type: EStdDataModels.LONG,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: 'Данные берём с корешка досье, поле обязательное', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'isStateDeal',
    name: 'Госзакупки 223-ФЗ/44-ФЗ',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'escrowType',
    name: 'Тип эскроу сделки',
    type: EStdDataModels.LIST,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'productObjectId',
    name: 'Идентификатор сделки',
    type: EStdDataModels.STRING,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'escrowTypeOther',
    name: 'Иной тип сделки',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'otherConditions',
    name: 'Прочие условия',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'deponent',
    name: 'Депонент',
    type: EStdDataModels.LIST,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: 'Выбор депонента', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'deponent',
    name: 'Депонент',
    type: EStdDataModels.LIST,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: 'Выбор депонента', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'Бенефициары',
    name: 'beneficiaries',
    type: EStdDataModels.LIST,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: 'Выбор бенефициара', type: ETagTypes.INPUT }],
  },
];
export const TAX_ATTRIBUTES_DATA: IAttributeBackendTableRecord[] = [
  {
    key: uuidv4(),
    attribute: 'taxDocumentDate',
    name: 'Дата налогового документа (в ПП поле 109)',
    type: EStdDataModels.LOCAL_DATE,
    required: ERequired.M,
    description: [
      { id: uuidv4(), name: 'Дата формирования платежа (109).', type: ETagTypes.INPUT },
      {
        id: uuidv4(),
        name: 'Отправка в формате: YYYY.MM.DD (для ПЛАТЁЖНОЙ_СИСТЕМЫ формат: DD.MM.YYYY).',
        type: ETagTypes.INPUT,
      },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'taxDocumentNumber',
    name: 'Номер налогового документа (в ПП поле 108)',
    type: EStdDataModels.STRING,
    required: ERequired.M,
    description: [
      { id: uuidv4(), name: '"0" для ПЛАТЁЖНОЙ_СИСТЕМЫ заполняется датой формирования платежа', type: ETagTypes.INPUT },
    ],
  },
  {
    key: uuidv4(),
    attribute: 'paymentType',
    name: 'Тип налогового документа (в УРД Уод выплат), в ПП поле 110',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: 'Не заполнять', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'currentTaxDate',
    name: 'Налоговый период',
    type: EStdDataModels.STRING,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: 'Дата формирования платежа', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'paymentReason',
    name: 'Основание налогового платежа (в ПП поле 106)',
    type: EStdDataModels.STRING,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: '"0"', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'taxPayerStatus',
    name: 'Статус налогоплательщика (в ПП поле 101)',
    type: EStdDataModels.STRING,
    required: ERequired.M,
    description: [{ id: uuidv4(), name: 'ЮЛ код: "27", ФЛ код: "20"', type: ETagTypes.INPUT }],
  },
  {
    key: uuidv4(),
    attribute: 'paymentUpno',
    name: 'Уникальный присваеваемый номер операции (УПНО)',
    type: EStdDataModels.STRING,
    required: ERequired.O,
    description: [{ id: uuidv4(), name: '-', type: ETagTypes.INPUT }],
  },
];
